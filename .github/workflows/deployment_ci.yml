name: Test & Deploy

on:
  push:
    branches:
      - verification-test

jobs:
  test_deploy:
    runs-on: macos-latest

    env:
      EMPLOY_BRANCH: main
      DEPLOY_BRANCH: gh-pages
      DEPLOY_TOKEN: ${{ secrets.ACTIONS_PAT }}
      COMMIT_USER_NAME: Joshua Sinyor
      COMMIT_USER_EMAIL: 74914999+JoshSinyor@users.noreply.github.com
      COMMIT_GPG_KEY: ${{ secrets.GPG_KEY }}
      COMMIT_MESSAGE: Automated commit. Reflects $(git rev-parse --abbrev-ref ${{ github.ref }}) branch commit $(git rev-parse --short ${{ github.sha }}).

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Environment
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.3

        # Test Code Begins Here

      - name: Decode & Export GPG Key
        run: |
          echo -n ${{ secrets.GPG_KEY }} | base64 --decode | gpg --import
          gpg --list-secret-keys

      # - name: Start gpg-agent and Import GPG Key
      #   run: |
      #     gpg-agent --daemon
      #     gpg --import private.key

        # Test Code Ends Here

      # - name: Install Gems
      #   run: |
      #     bundle config set --local without 'jekyll jekyll_plugins'
      #     bundle install
      #     git restore Gemfile.lock
      #
      # - name: Run Tests
      #   run: |
      #     rubocop
      #     rspec
      #
      # - name: Commit
      #   run: |
      #     git add .
      #     if git diff-index --quiet HEAD; then
      #       git commit --amend --author="$COMMIT_USER_NAME <$COMMIT_USER_EMAIL>" -m "${{ env.COMMIT_MESSAGE }}"
      #     else
      #       git commit --author="$COMMIT_USER_NAME <$COMMIT_USER_EMAIL>" -m "${{ env.COMMIT_MESSAGE }}"
      #     fi
      #
      # - name: Fetch Deploy Branch
      #   run: |
      #     git remote set-url origin "https://x-access-token:$DEPLOY_TOKEN@github.com/${{ github.repository }}"
      #     git fetch origin $DEPLOY_BRANCH
      #
      # - name: Reset Deploy Branch
      #   run: |
      #     git checkout $DEPLOY_BRANCH
      #     git reset --hard $EMPLOY_BRANCH
      #
      # - name: Deploy
      #   run: git push --force-with-lease origin $DEPLOY_BRANCH
